#!/usr/bin/env bash
# Minimal pre-commit hook to catch secrets and run basic python checks
set -euo pipefail

FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.py$' || true)
if [ -n "$FILES" ]; then
  echo "Running python -m pyflakes on staged python files"
  for f in $FILES; do
    python3 -m pyflakes "$f" || { echo "pyflakes failed for $f"; exit 1; }
  done
fi

# Basic secrets check: grep for actual secret values (not code/variable names)
# Skip documentation and known placeholder files to avoid false positives.
# Files to skip: .env.example, README.md, .githooks/*, scripts/*, .pre-commit-config.yaml, .secrets.baseline
FILES_TO_SCAN=$(git diff --cached --name-only --diff-filter=ACM | grep -vE '^(\.env.example$|README.md$|\.githooks/|scripts/|run\.sh$|run_in_venv\.sh$|setup_venv\.sh$|\.pre-commit-config\.yaml$|\.secrets\.baseline$)' || true)
if [ -n "$FILES_TO_SCAN" ]; then
  # Match actual secret values, not variable names or code:
  # - AWS keys starting with AKIA
  # - Vault tokens hvs. or s. (actual token values, not variable names)
  # - Lines with VAULT_TOKEN= followed by non-placeholder values (excluding default=os.getenv patterns)
  # - Private keys
  # - password= with actual values (not just param names)
  SECRETS=$(echo "$FILES_TO_SCAN" | xargs grep -En '(AKIA[0-9A-Z]{16,}|hvs\.[A-Za-z0-9_\-\.]{24,}|s\.[A-Za-z0-9_\-\.]{24,}|VAULT_TOKEN\s*=\s*["\047][a-zA-Z0-9]{20,}["\047]|-----BEGIN (PRIVATE|RSA PRIVATE) KEY-----|password\s*=\s*["\047]\S{6,}["\047])' || true)
else
  SECRETS=""
fi

if [ -n "$SECRETS" ]; then
  echo "Potential secret/credential found in staged files:" >&2
  echo "$SECRETS" >&2
  echo "Aborting commit. Remove secrets or add them to .env and .gitignore." >&2
  exit 1
fi

exit 0

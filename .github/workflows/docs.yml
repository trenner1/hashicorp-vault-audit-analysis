name: Versioned Rust docs to Pages

on:
  release:
    types: [published]      # build when you publish a release (tag)
  push:
    tags:
      - 'v*'                 # also build on version tag pushes (backup trigger)
  workflow_dispatch:         # allow manual runs (useful to rebuild all versions)

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  # The actual crate name from Cargo.toml
  CRATE: vault-audit-tools
  # The doc directory name (hyphens become underscores)
  DOC_CRATE: vault_audit_tools
  # how many most-recent tags to include (keep the site fast to build)
  VERSION_COUNT: "10"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with full history for tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Prepare site dir
        run: |
          rm -rf site target || true
          mkdir -p site

      # ---------- Build latest from default branch ----------
      - name: Build docs for latest (default branch)
        env:
          RUSTDOCFLAGS: "--cfg docsrs"
        run: |
          cargo doc -p "$CRATE" --all-features --no-deps
          mkdir -p "site/latest"
          rsync -a "target/doc/" "site/latest/"

      # ---------- Build versioned docs for recent tags ----------
      - name: Build docs for last N tags (v*)
        if: ${{ always() }}
        env:
          RUSTDOCFLAGS: "--cfg docsrs"
        run: |
          # pick last N semver-ish tags (vX.Y.Z)
          TAGS=$(git tag --list 'v*' --sort=-v:refname | head -n "${VERSION_COUNT}")
          echo "Building tags: ${TAGS}"
          for t in ${TAGS}; do
            echo "::group::Build $t"
            git checkout --force "tags/${t}"

            # clean target between tag builds to avoid cross-version bleed
            rm -rf target
            cargo doc -p "$CRATE" --all-features --no-deps

            mkdir -p "site/v/${t}"
            rsync -a "target/doc/" "site/v/${t}/"
            echo "::endgroup::"
          done

          # return to previous ref (Actions checks out a detached HEAD)
          git checkout -

      # ---------- Root redirect ----------
      - name: Create root redirect to latest
        run: |
          cat > site/index.html <<'HTML'
          <!doctype html>
          <meta charset="utf-8">
          <meta http-equiv="refresh" content="0; url=latest/vault_audit_tools/index.html">
          <link rel="canonical" href="latest/vault_audit_tools/index.html">
          <title>Redirecting to vault-audit-tools docsâ€¦</title>
          HTML

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

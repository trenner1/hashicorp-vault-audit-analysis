name: Versioned Rust docs to Pages

on:
  release:
    types: [published]         # run when you publish a release
  push:
    tags:
      - 'v*'                   # run when pushing version tags
    branches:
      - main                   # also refresh "latest" on main changes
  workflow_dispatch:           # allow manual rebuilds

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  CRATE: vault-audit-tools
  DOC_CRATE: vault_audit_tools
  VERSION_COUNT: "10"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (full history for tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build docs (latest from current commit)
        run: |
          set -euxo pipefail
          rm -rf _site
          mkdir -p _site

          # Build latest
          cargo doc --no-deps -p "$CRATE"
          mkdir -p "_site/latest"
          cp -r target/doc "_site/latest/"

          # Root index -> latest crate docs
          cat > _site/index.html <<EOF
          <meta http-equiv="refresh" content="0; url=latest/${DOC_CRATE}/index.html">
          <link rel="canonical" href="latest/${DOC_CRATE}/index.html"/>
          EOF

      - name: Build docs for recent tags
        shell: bash
        run: |
          set -euxo pipefail
          mapfile -t TAGS < <(git tag -l 'v*' --sort=-v:refname | head -n "${VERSION_COUNT}")
          for tag in "${TAGS[@]}"; do
            git checkout --quiet "$tag"
            # clean target between tag builds to keep size down
            rm -rf target/doc
            cargo doc --no-deps -p "$CRATE"
            mkdir -p "_site/$tag"
            cp -r target/doc "_site/$tag/"
          done
          # return to original ref
          git checkout --quiet "${GITHUB_SHA}"

      - name: Generate versions.html
        shell: bash
        run: |
          set -euo pipefail
          cat > _site/versions.html <<'HTML'
          <!doctype html><meta charset="utf-8">
          <title>Documentation Versions</title>
          <h1>Documentation Versions</h1>
          <ul>
          HTML
          # list versions (latest tags first)
          for v in $(ls -1 _site | grep '^v' | sort -rV); do
            echo "<li><a href=\"${v}/${DOC_CRATE}/index.html\">${v}</a></li>" >> _site/versions.html
          done
          cat >> _site/versions.html <<'HTML'
          </ul>
          <p><a href="latest/${DOC_CRATE}/index.html">Latest (main)</a></p>
          HTML

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
